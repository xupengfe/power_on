ADAPTIVE_PEBS_XS_FUNC_BENCHMARK	apebs_tests.sh -t benchmark -w 0	APEBS	CPU
ADAPTIVE_PEBS_XS_FUNC_DATA_SRC	apebs_tests.sh -t data_src -w 0	APEBS	CPU
ADAPTIVE_PEBS_XS_FUNC_IP_LEVEL_1	apebs_tests.sh -t ip_1 -w 0	APEBS	CPU
ADAPTIVE_PEBS_XS_FUNC_IP_LEVEL_2	apebs_tests.sh -t ip_2 -w 0	APEBS	CPU
ADAPTIVE_PEBS_XS_FUNC_LARGE_PEBS	apebs_tests.sh -t large_pebs -w 0	APEBS	CPU
ADAPTIVE_PEBS_XS_FUNC_LBR_LEVEL_1	apebs_tests.sh -t lbr_1 -w 0	APEBS	CPU
ADAPTIVE_PEBS_XS_FUNC_WITH_SR	apebs_tests.sh -t sr -w 0	APEBS	CPU
ADAPTIVE_PEBS_XS_FUNC_XMM_LEVEL_1	apebs_tests.sh -t xmm_1 -w 0	APEBS	CPU
CPU_XS_BAT_AESNI_CPU_ID_TEST	cpu_bat.sh -n aesni -p "1 0 0 0 c 25"	AESNI	CPU
CPU_XS_BAT_AESNI_CPU_INFO_TEST	cpu_bat.sh -n aesni -f aes	AESNI	CPU
CPU_XS_BAT_FSGSBASE_CPU_ID_TEST	cpu_bat.sh -n fsgsbase -p "7 1 0 1 b 0"	FSGSBASE	CPU
CPU_XS_BAT_FSGSBASE_CPU_INFO_TEST	cpu_bat.sh -n fsgsbase -f fsgsbase	FSGSBASE	CPU
CPU_XS_BAT_GFNI_CPU_ID_TEST	cpu_bat.sh -n gfni -p "7 1 0 1 c 8"	GFNI	CPU
CPU_XS_BAT_GFNI_CPU_INFO_TEST	cpu_bat.sh -n gfni -f gfni	GFNI	CPU
CPU_XS_BAT_RAR_CPU_ID_TEST	cpu_bat.sh -n rar -p "7 0 0 0 d 30"	RAR	CPU
CPU_XS_BAT_RAR_X86_FEATURE_INVPCID	cpu_feature 298	RAR	CPU
CPU_XS_BAT_RAR_X86_FEATURE_PCID	cpu_feature 145	RAR	CPU
CPU_XS_BAT_RAR_X86_FEATURE_RAR	cpu_feature 255	RAR	CPU
CPU_XS_BAT_RDPID_CPU_ID_TEST	cpu_bat.sh -n rdpid -p "7 1 0 1 c 22"	RDPID	CPU
CPU_XS_BAT_RDPID_CPU_INFO_TEST	cpu_bat.sh -n rdpid -f rdpid	RDPID	CPU
CPU_XS_BAT_SHANI_CPU_INFO_TEST	cpu_bat.sh -n shani -f sha_ni	SHA	CPU
CPU_XS_BAT_SMEP_CPU_ID_TEST	cpu_bat.sh -n smep -p "7 0 0 0 b 7"	SMEP	CPU
CPU_XS_BAT_SMEP_CPU_INFO_TEST	cpu_bat.sh -n smep -f smep	SMEP	CPU
CPU_XS_BAT_VAES_CPU_ID_TEST	cpu_bat.sh -n vaes -p "7 1 0 1 c 9"	VAES	CPU
CPU_XS_BAT_VAES_CPU_INFO_TEST	cpu_bat.sh -n vaes -f vaes	VAES	CPU
CPU_XS_BAT_VBMI2_CPU_ID_TEST	cpu_bat.sh -n vbmi -p "7 1 0 1 c 6"	VBMI	CPU
CPU_XS_BAT_VBMI2_CPU_INFO_TEST	cpu_bat.sh -n vbmi -f vbmi2	VBMI	CPU
CPU_XS_BAT_VBMI_CPU_ID_TEST	cpu_bat.sh -n vbmi -p "7 1 0 1 c 1"	VBMI	CPU
CPU_XS_BAT_VBMI_CPU_INFO_TEST	cpu_bat.sh -n vbmi -f vbmi	VBMI	CPU
CPU_XS_BAT_VNNI_CPU_ID_TEST	cpu_bat.sh -n vnni -p "7 1 0 1 c 11"	VNNI	CPU
CPU_XS_BAT_VNNI_CPU_INFO_TEST	cpu_bat.sh -n vnni -f vnni	VNNI	CPU
CPU_XS_BAT_VP2_CPU_ID_TEST	cpu_bat.sh -n vp2 -p "7 0 0 0 d 8"	VP2	CPU
CPU_XS_BAT_VP2_CPU_INFO_TEST	cpu_bat.sh -n vp2 -f "avx512_vp2intersect"	VP2	CPU
CPU_XS_BAT_XSAVE_CPU_INFO_TEST	cpu_bat.sh -n xsave -f xsave	XSAVE	CPU
CPU_XS_FUNC_RDPID_VDSO_FUNC	rdpid_func.sh -n test_vdso -p null	RDPID	CPU
CPU_XS_FUNC_RDPID_VGETCPU_SPEED	rdpid_func.sh -n timing_test -p "50M vgetcpu"	RDPID	CPU
CPU_XS_FUNC_SL_OFF_ROOT_MODE	sl_func.sh -a off -m root	SL	CPU
CPU_XS_FUNC_SL_OFF_USER_MODE	sl_func.sh -a off -m user	SL	CPU
CPU_XS_FUNC_SL_ON_DEFAULT	cpu_bat.sh -n sl -f split_lock_detect	SL	CPU
CPU_XS_FUNC_SL_ON_ROOT_MODE	sl_func.sh -a on -m root	SL	CPU
CPU_XS_FUNC_SL_ON_USER_MODE	sl_func.sh -a on -m user	SL	CPU
CPU_XS_FUNC_VBMI_RANDOM	vbmi_func.sh -n vpmadd -p random	VBMI	CPU
CPU_XS_FUNC_VBMI_ZMM2_0_FF	vbmi_func.sh -n vpmadd -p "0 ff b"	VBMI	CPU
CPU_XS_FUNC_VBMI_ZMM2_18_FF	vbmi_func.sh -n vpmadd -p "18 ff b"	VBMI	CPU
CPU_XS_FUNC_VBMI_ZMM2_19_FF	vbmi_func.sh -n vpmadd -p "19 ff b"	VBMI	CPU
CPU_XS_FUNC_VBMI_ZMM2_1F_FF	vbmi_func.sh -n vpmadd -p "1F ff b"	VBMI	CPU
CPU_XS_FUNC_VBMI_ZMM2_1_FF	vbmi_func.sh -n vpmadd -p "1 ff b"	VBMI	CPU
CPU_XS_FUNC_XSAVE_AVXMDB	xsave_func.sh -n avxmdb -p "null"	XSAVE	CPU
CPU_XS_FUNC_XSAVE_CET_SYS_VERIFY	xsave_func.sh -n ptrace_sys_states -p "cet"	XSAVE	CPU
CPU_XS_FUNC_XSAVE_PT_SYS_VERIFY	xsave_func.sh -n ptrace_sys_states -p "null"	XSAVE	CPU
CPU_XS_FUNC_XSAVE_SCHEDCHECK_1088	xsave_func.sh -n schedcheck -p "1088"	XSAVE	CPU
CPU_XS_FUNC_XSAVE_SCHEDCHECK_NULL	xsave_func.sh -n schedcheck -p "null"	XSAVE	CPU
CPU_XS_FUNC_XSAVE_THREADCHECK_LOAD	xsave_func.sh -n threadcheck_load -p "null"	XSAVE	CPU
PT_FUNC_BRANCH_TRACE_STORAGE	BAT-ipt 2	Intel_PT	CPU
PT_XS_FUNC_BRANCH	branch	Intel_PT	CPU
PT_XS_FUNC_CPL_KERNEL	cpl 2	Intel_PT	CPU
PT_XS_FUNC_CPL_USER	cpl 1	Intel_PT	CPU
PT_XS_FUNC_FT_NONROOT	ipt_nonroot.sh -t ft	Intel_PT	CPU
PT_XS_FUNC_FT_PACKGE_CPUS_EXCLUDE_KERNEL	BAT-ipt 5 2	Intel_PT	CPU
PT_XS_FUNC_FT_PACKGE_CPUS_EXCLUDE_NO	BAT-ipt 5 0	Intel_PT	CPU
PT_XS_FUNC_FT_PACKGE_CPUS_EXCLUDE_USER	BAT-ipt 5 1	Intel_PT	CPU
PT_XS_FUNC_FT_PACKGE_EXCLUDE_KERNEL	BAT-ipt 3 2	Intel_PT	CPU
PT_XS_FUNC_FT_PACKGE_EXCLUDE_NO	BAT-ipt 3 0	Intel_PT	CPU
PT_XS_FUNC_FT_PACKGE_EXCLUDE_USER	BAT-ipt 3 1	Intel_PT	CPU
PT_XS_FUNC_PID	pid_test	Intel_PT	CPU
PT_XS_FUNC_PSB	psb	Intel_PT	CPU
PT_XS_FUNC_SN_NONROOT	ipt_nonroot.sh -t sn	Intel_PT	CPU
PT_XS_FUNC_SN_PACKGE_EXCLUDE_KERNEL	BAT-ipt 4 2	Intel_PT	CPU
PT_XS_FUNC_SN_PACKGE_EXCLUDE_NO	BAT-ipt 4 0	Intel_PT	CPU
PT_XS_FUNC_SN_PACKGE_EXCLUDE_USER	BAT-ipt 4 1	Intel_PT	CPU
PT_XS_FUNC_SYSFS	ipt_sysfs_check.sh -t path	Intel_PT	CPU
PT_XS_FUNC_SYSFS_CAPS	ipt_sysfs_check.sh -t caps	Intel_PT	CPU
PT_XS_FUNC_SYSFS_TIME	ipt_sysfs_check.sh -t time	Intel_PT	CPU
PT_XS_FUNC_TOPA_USAGE	BAT-ipt 1	Intel_PT	CPU
RTC_XS_FUNC_HWCLOCK_TIME_READ	rtc_hwclock.sh -g "all"	RTC	CPU
RTC_XS_FUNC_HWCLOCK_TIME_WRITE	rtc_hwclock.sh -r "19980318.012504" -u	RTC	CPU
RTC_XS_FUNC_IOCTL_RONLY_RD_1	rtc_tests -device /dev/rtc -loop 1 -ioctltest readtime -readonly	RTC	CPU
RTC_XS_FUNC_IOCTL_RONLY_RD_10	rtc_tests -device /dev/rtc -loop 10 -ioctltest readtime -readonly	RTC	CPU
RTC_XS_FUNC_MODIFY_IRQ_FREQ	rtc_tests -device /dev/rtc -ioctltest modifyirqfreq -ioctltestarg ${RTC_MAX_IRQ_FREQ:-512}	RTC	CPU
RTC_XS_FUNC_NEG_SETGETTIME	rtc_tests -device /dev/rtc -ioctltest setgettime -readonly	RTC	CPU
RTC_XS_FUNC_PROC_INFO_CHECK_1	rtc_driver_info_check.sh -c "rtc_time" -c "rtc_date" -c "alrm_time" -c "alrm_date" -c "alarm_IRQ" -c "alrm_pending" -c "update_IRQ_enable"	RTC	CPU
RTC_XS_FUNC_PROC_INFO_CHECK_2	rtc_driver_info_check.sh -c "periodic_IRQ_enable" -c "periodic_IRQ_frequency" -c "max_user_IRQ_frequency" -c "24h"	RTC	CPU
RTC_XS_FUNC_PROC_INFO_CHECK_3	rtc_driver_info_check.sh -c "BCD" -c "periodic_IRQ" -c "update_IRQ" -c "DST_enable" -c "BCD" -c "HPET_emulated"	RTC	CPU
RTC_XS_FUNC_READTIME_1	rtc_tests -device /dev/rtc -ioctltest readtime	RTC	CPU
RTC_XS_FUNC_SETGETTIME	rtc_tests -device /dev/rtc -ioctltest setgettime	RTC	CPU
RTC_XS_FUNC_SETGETTIME_30_DAY	rtc_tests -device /dev/rtc -ioctltest setgettime -ioctltestarg 1	RTC	CPU
RTC_XS_FUNC_SETGETTIME_LEAP	rtc_tests -device /dev/rtc -ioctltest setgettime -ioctltestarg 2	RTC	CPU
RTC_XS_FUNC_SETGETTIME_NONLEAP	rtc_tests -device /dev/rtc -ioctltest setgettime -ioctltestarg 3	RTC	CPU
RTC_XS_FUNC_SET_ALARM_30_SECS	rtc_tests -device /dev/rtc -ioctltest alarm -ioctltestarg 30	RTC	CPU
RTC_XS_FUNC_SET_HCTOSYS	rtc_hwclock.sh -r "19980318.012504" -y "rtc"	RTC	CPU
RTC_XS_FUNC_SET_SYSTOHC	rtc_hwclock.sh -s "19980318.012504" -y "sys"	RTC	CPU
RTC_XS_FUNC_SYSFS_ENTRY_PRESENT	check_rtc_sysfs.sh	RTC	CPU
RTC_XS_FUNC_SYS_ENTRY_PRESENT	check_node_in_sysfs.sh -d "rtc" -m "1" -s "rtc0"	RTC	CPU
RTC_XS_FUNC_UPDATE_INT_ON_OFF	rtc_tests -device /dev/rtc -ioctltest updateint	RTC	CPU
SHA_XS_FUNC_SHA1_NI_TEST	sha_ni_test.sh -t sha_ni -n sha1 -a test	SHA	CPU
SHA_XS_FUNC_SHA256_NI_TEST	sha_ni_test.sh -t sha_ni -n sha256 -a test	SHA	CPU
TH_MSU_XS_FUNC_BIND_UNBIND_DRIVER	bind_unbind_driver.sh "msc"	Intel_TH	CPU
TH_MSU_XS_FUNC_DEV_CHECK	driver_sysfs.sh -d "msc" -s "a"	Intel_TH	CPU
TH_MSU_XS_FUNC_DRV_CHECK	driver_sysfs.sh -d "msc" -p	Intel_TH	CPU
TH_PTI_XS_FUNC_BIND_UNBIND_DRIVER	bind_unbind_driver.sh "pti"	Intel_TH	CPU
TH_PTI_XS_FUNC_DRV_CHECK	driver_sysfs.sh -d "pti" -p	Intel_TH	CPU
TH_STH_XS_FUNC_BIND_UNBIND_DRIVER	bind_unbind_driver.sh "sth"	Intel_TH	CPU
TH_STH_XS_FUNC_DEV_CHECK	driver_sysfs.sh -d "sth" -s "a"	Intel_TH	CPU
TH_XS_FUNC_BIND_UNBIND_DRIVER	bind_unbind_driver.sh "ith"	Intel_TH	CPU
TH_XS_FUNC_DEV_CHECK	driver_sysfs.sh -d "ith" -s "a"	Intel_TH	CPU
TH_XS_FUNC_DUMMY_STM	intel_th_tests.sh -t dummy_stm	Intel_TH	CPU
TH_XS_FUNC_GTH_PORT_INFO	intel_th_tests.sh -t port_sys	Intel_TH	CPU
TH_XS_FUNC_GTH_SWITCH	intel_th_tests.sh -t gth_switch	Intel_TH	CPU
TH_XS_FUNC_HOST_MODE	intel_th_tests.sh -t host_mode	Intel_TH	CPU
TH_XS_FUNC_HOST_MODULE	intel_th_tests.sh -t host_module	Intel_TH	CPU
TH_XS_FUNC_IOCTL_GET_ID	intel_th_tests.sh -t ioctl_get	Intel_TH	CPU
TH_XS_FUNC_IOCTL_SET_ID	intel_th_tests.sh -t ioctl_set	Intel_TH	CPU
TH_XS_FUNC_LPP_BASIC	intel_th_tests.sh -t output_basic -o lpp	Intel_TH	CPU
TH_XS_FUNC_LPP_WITH_MSC	intel_th_tests.sh -t output_msc -o lpp -s default -d 0-msc0 -p basic	Intel_TH	CPU
TH_XS_FUNC_MMAP_TRACE	intel_th_tests.sh -t mmap -d 0-msc0	Intel_TH	CPU
TH_XS_FUNC_MSU_BASIC	intel_th_tests.sh -t msu	Intel_TH	CPU
TH_XS_FUNC_MSU_ENABLE_DISABLE	intel_th_tests.sh -t msu_enable_disable	Intel_TH	CPU
TH_XS_FUNC_MSU_SYSFS	intel_th_tests.sh -t msu_sysfs	Intel_TH	CPU
TH_XS_FUNC_MULTI_TH_DEVICE	intel_th_tests.sh -t mth	Intel_TH	CPU
TH_XS_FUNC_MULTI_TH_DEVICE_W_CPU	intel_th_tests.sh -t mth_cpu	Intel_TH	CPU
TH_XS_FUNC_PCH_MSC0_CONSOLE_TRACE_BASIC	intel_th_tests.sh -t msu_trace -s console -d 0-msc0 -p basic	Intel_TH	CPU
TH_XS_FUNC_PCH_MSC0_DEFAULT_TRACE_BASIC	intel_th_tests.sh -t msu_trace -s default -d 0-msc0 -p basic	Intel_TH	CPU
TH_XS_FUNC_PCH_MSC_UNWRAP	intel_th_tests.sh -t unwrap -d 0-msc0	Intel_TH	CPU
TH_XS_FUNC_PCH_MSC_WRAP	intel_th_tests.sh -t wrap -d 0-msc0	Intel_TH	CPU
TH_XS_FUNC_PTI_BASIC	intel_th_tests.sh -t output_basic -o pti	Intel_TH	CPU
TH_XS_FUNC_PTI_WITH_MSC	intel_th_tests.sh -t output_msc -o pti -s default -d 0-msc0 -p basic	Intel_TH	CPU
TH_XS_FUNC_STH_DEV	intel_th_tests.sh -t sth_dev	Intel_TH	CPU
TH_XS_FUNC_STM_POLICY_DUMMY	intel_th_tests.sh -t stm_policy_dummy	Intel_TH	CPU
TH_XS_FUNC_STM_POLICY_MASTER_CHANNEL_SET	intel_th_tests.sh -t stm_policy_set	Intel_TH	CPU
TH_XS_FUNC_STM_POLICY_STH	intel_th_tests.sh -t stm_policy_sth	Intel_TH	CPU
TH_XS_FUNC_STM_PROTOCOL_BASIC	intel_th_tests.sh -t protocol_basic	Intel_TH	CPU
TH_XS_FUNC_STM_SOURCE_ALL_WITH_DUMMY	intel_th_tests.sh -t stm_source_all_dummy	Intel_TH	CPU
WDT_XS_FUNC_BIND_UNBIND_DRV	bind_unbind_driver.sh "wdt"	WDT	CPU
WDT_XS_FUNC_DEV_CHECK	driver_sysfs.sh -d "wdt" -s "h"	WDT	CPU
WDT_XS_FUNC_DRV_CHECK	driver_sysfs.sh -d "wdt" -p	WDT	CPU
WDT_XS_FUNC_GETTIMEOUT	wdt_tests.sh -i "gettimeout"	WDT	CPU
WDT_XS_FUNC_KEEPALIVE	wdt_tests.sh -i "keepalive"	WDT	CPU
WDT_XS_FUNC_SETTIMEOUT	wdt_tests.sh -i "settimeout"	WDT	CPU
WDT_XS_FUNC_SETTIMEOUT_10SECS	wdt_tests.sh -i "settimeout" -a "10"	WDT	CPU
WDT_XS_FUNC_SETTIMEOUT_25SECS	wdt_tests.sh -i "settimeout" -a "25"	WDT	CPU
WDT_XS_FUNC_SETTIMEOUT_50SECS	wdt_tests.sh -i "settimeout" -a "50"	WDT	CPU
WDT_XS_FUNC_SETTIMEOUT_RNDM	wdt_tests.sh -i "settimeout" -r	WDT	CPU
WDT_XS_FUNC_WRITE	wdt_tests.sh -i "write"	WDT	CPU
CPU_XS_FUNC_RDT_STLB_AVAILABLE_TEST	cpu_bat.sh -n rdt -f stlb_qos	RDT_STLB	CPU
CPU_XS_FUNC_RDT_STLB_CDP_TEST	cpu_bat.sh -n rdt -f cdp	RDT_STLB	CPU
CPU_XS_FUNC_RDT_STLB_ID_TEST	cpu_bat.sh -n rdt -p "7 1 0 1 b 15"	RDT_STLB	CPU
DMA_XS_FUNC_ACPI_ENUM	dma_test.sh -l 1 -t 2	DMA	IO
DMA_XS_FUNC_DRV_CHECK	dma_test.sh -l 1 -t 1	DMA	IO
GPIO_XS_FUNC_BIND_UNBIND_DRV	bind_unbind_driver.sh "gpio"	GPIO	IO
GPIO_XS_FUNC_CTRL_INTERFACES	gpio_chips.sh -f	GPIO	IO
GPIO_XS_FUNC_DEV_CHECK	driver_sysfs.sh -d "gpio" -s "h"	GPIO	IO
GPIO_XS_FUNC_DRV_CHECK	driver_sysfs.sh -d "gpio" -p	GPIO	IO
GPIO_XS_FUNC_EXPORT_GPIOS	gpio_chips.sh -g "gpios" -e	GPIO	IO
GPIO_XS_FUNC_GET_CHIPS	gpio_chips.sh -g "chips"	GPIO	IO
GPIO_XS_FUNC_GET_GPIOS	gpio_chips.sh -g "gpios"	GPIO	IO
GPIO_XS_FUNC_GET_SIGNALS	gpio_chips.sh -g "gpios" -e -s	GPIO	IO
NVME_XS_FUNC_DEV_CHECK	blk_device_bat_test.sh -d "nvme" -c "2"	NVME	IO
NVME_XS_FUNC_DRV_CHECK	blk_device_bat_test.sh -d "nvme" -c "1"	NVME	IO
NVME_XS_FUNC_GET_NAME	blk_device_bat_test.sh -d "nvme" -c "3"	NVME	IO
NVME_XS_FUNC_MOUNT_PART	blk_device_bat_test.sh -d "nvme" -c "4"	NVME	IO
PCI_FUNC_ENUMERATION_DEVICE	pci_verifyer.sh -e	PCI	IO
PCI_FUNC_LIST_MODULES_LOADED	pci_verifyer.sh -m	PCI	IO
PCI_FUNC_NUMBER_OF_ROOT_PORTS	pci_verifyer.sh -n	PCI	IO
PCI_FUNC_PORT_KERNEL_DRIVER	pci_verifyer.sh -k	PCI	IO
PCI_FUNC_ROOT_PORT_CLASS	pci_verifyer.sh -c	PCI	IO
PCI_FUNC_ROOT_PORT_VENDOR_ID	pci_verifyer.sh -i	PCI	IO
PCI_XS_FUNC_GET_SPEED_WIDTH	pci_basic_tests.sh -c 1	PCI	IO
PCI_XS_FUNC_VERIFY_CONFIG	pci_basic_tests.sh -c 4	PCI	IO
PCI_XS_FUNC_VERIFY_DEV	pci_basic_tests.sh -c 3	PCI	IO
PCI_XS_FUNC_VERIFY_DRV	pci_basic_tests.sh -c 2	PCI	IO
PCIe_FUNC_ETH_PING_TG	iface=`pci_eth_search_device.sh` || die "error getting pcie eth interface name"; pci_run_eth_test.sh -i "$iface" -o 1	PCIe	IO
PCIe_FUNC_ETH_PING_TG_MLT_PKG_SIZE	iface=`pci_eth_search_device.sh` || die "error getting pcie eth interface name"; pci_run_eth_test.sh -i "$iface" -o 3	PCIe	IO
PCIe_FUNC_ETH_PING_TG_PKG_SIZE	iface=`pci_eth_search_device.sh` || die "error getting pcie eth interface name"; pci_run_eth_test.sh -i "$iface" -o 2	PCIe	IO
SATA_XS_FUNC_AHCI_SPEC	blk_device_specification.sh -a	SATA	IO
SATA_XS_FUNC_DEV_CHECK	blk_device_bat_test.sh -d "sata" -c "2"	SATA	IO
SATA_XS_FUNC_DRV_CHECK	blk_device_bat_test.sh -d "sata" -c "1"	SATA	IO
SATA_XS_FUNC_ENUM_DEVICE	blk_device_specification.sh -e	SATA	IO
SATA_XS_FUNC_GEN3_SPEC	blk_device_specification.sh -g	SATA	IO
SATA_XS_FUNC_GET_NAME	blk_device_bat_test.sh -d "sata" -c "3"	SATA	IO
SATA_XS_FUNC_MOUNT_PART	blk_device_bat_test.sh -d "sata" -c "4"	SATA	IO
SATA_XS_FUNC_NCQ_SPEC	blk_native_command_queueing.sh -d "sata"	SATA	IO
SATA_XS_FUNC_POWER_MGMT_D0	blk_power_management.sh	SATA	IO
TGPIO_PMC_XS_FUNC_ADJF	tgpio_tests.sh -t agjf -m pmc	TGPIO	IO
TGPIO_PMC_XS_FUNC_ADJT	tgpio_tests.sh -t agjt -m pmc	TGPIO	IO
TGPIO_PMC_XS_FUNC_CAP	tgpio_tests.sh -t cap -m pmc	TGPIO	IO
TGPIO_PMC_XS_FUNC_DEVICES	tgpio_tests.sh -t dev -m pmc	TGPIO	IO
TGPIO_PMC_XS_FUNC_DEVICES_CHECK	tgpio_tests.sh -t dev_check -m pmc	TGPIO	IO
TGPIO_PMC_XS_FUNC_DRIVER	tgpio_tests.sh -t driver -m pmc	TGPIO	IO
TGPIO_PMC_XS_FUNC_GETTIME	tgpio_tests.sh -t gtime -m pmc	TGPIO	IO
TGPIO_PMC_XS_FUNC_INPUT	tgpio_tests.sh -t input -m pmc	TGPIO	IO
TGPIO_PMC_XS_FUNC_MAX_ADJ	tgpio_tests.sh -t max_adj -m pmc	TGPIO	IO
TGPIO_PMC_XS_FUNC_OUTPUT	tgpio_tests.sh -t output -m pmc	TGPIO	IO
TGPIO_PMC_XS_FUNC_PINS_COUNT	tgpio_tests.sh -t pins_count -m pmc	TGPIO	IO
TGPIO_PMC_XS_FUNC_SETTIME	tgpio_tests.sh -t stime -m pmc	TGPIO	IO
UFS_XS_FUNC_DEV_CHECK	blk_device_bat_test.sh -d "ufs" -c "2"	UFS	IO
UFS_XS_FUNC_DRV_CHECK	blk_device_bat_test.sh -d "ufs" -c "1"	UFS	IO
UFS_XS_FUNC_GET_NAME	blk_device_bat_test.sh -d "ufs" -c "3"	UFS	IO
UFS_XS_FUNC_MOUNT_PART	blk_device_bat_test.sh -d "ufs" -c "4"	UFS	IO
USBHOST_M_FUNC_EXT2_DD_RW_1G	blk_device_dd_readwrite_test.sh -f 'ext2' -b '10M' -c '100' -d 'usb'	USB_HOST	IO
USBHOST_XS_FUNC_3.1_ROOTHUB	xhci_check.sh 3.1	USB_HOST	IO
USBHOST_XS_FUNC_3.1_ROOTHUB_INFO	xhci_check.sh 3.1_info	USB_HOST	IO
USBHOST_XS_FUNC_DEV_CHECK	blk_device_bat_test.sh -d "usb" -c "2"	USB_HOST	IO
USBHOST_XS_FUNC_DRV_CHECK	blk_device_bat_test.sh -d "usb" -c "1"	USB_HOST	IO
USBHOST_XS_FUNC_EP_POLL	usb_sysfs_tests.sh -t ep	USB_HOST	IO
USBHOST_XS_FUNC_GET_NAME	blk_device_bat_test.sh -d "usb" -c "3"	USB_HOST	IO
USBHOST_XS_FUNC_LPM_2.0_FLASH	usb_lpm_tests.sh -p 2.0 -t flash	USB_HOST	IO
USBHOST_XS_FUNC_LPM_3.0_FLASH	usb_lpm_tests.sh -p 3.0 -t flash	USB_HOST	IO
USBHOST_XS_FUNC_LPM_3.1_UAS	usb_lpm_tests.sh -p 3.1 -t uas	USB_HOST	IO
USBHOST_XS_FUNC_MOUNT_PART	blk_device_bat_test.sh -d "usb" -c "4"	USB_HOST	IO
USBHOST_XS_FUNC_ROOTHUB_HOTPLUG	usb_sysfs_tests.sh -t hotplug	USB_HOST	IO
USBHOST_XS_FUNC_RW_2.0_FLASH	usb_read_write_tests.sh -b 1MB -c 100 -p 2.0 -t flash	USB_HOST	IO
USBHOST_XS_FUNC_RW_3.0_FLASH	usb_read_write_tests.sh -b 1MB -c 100 -p 3.0 -t flash	USB_HOST	IO
USBHOST_XS_FUNC_RW_3.1_UAS	usb_read_write_tests.sh -b 1MB -c 100 -p 3.1 -t uas	USB_HOST	IO
USBHOST_XS_FUNC_TRACE	usb_trace_tests.sh -t host	USB_HOST	IO
USBTYPEC_XS_FUNC_DATAROLE_POLLING	usb_typec_tests.sh -t datap	USB_TYPEC	IO
USBTYPEC_XS_FUNC_KCONFIG_CHECK	usb_typec_tests.sh -t kconfig	USB_TYPEC	IO
USBTYPEC_XS_FUNC_MODULE_CHECK	usb_typec_tests.sh -t module	USB_TYPEC	IO
USBTYPEC_XS_FUNC_PORT_TYPE_POLLING	usb_typec_tests.sh -t port_type	USB_TYPEC	IO
USBTYPEC_XS_FUNC_POWERROLE_POLLING	usb_typec_tests.sh -t powerp	USB_TYPEC	IO
USBTYPEC_XS_FUNC_POWER_OPERATION_MODE_POLLING	usb_typec_tests.sh -t power_operation_mode	USB_TYPEC	IO
USBTYPEC_XS_FUNC_RW_3.1_UAS	usb_read_write_tests.sh -b 1MB -c 100 -p 3.1 -t uas	USB_TYPEC	IO
USBTYPEC_XS_FUNC_STORAGE_SYSFS_CHECK	usb_typec_tests.sh -t storage	USB_TYPEC	IO
USBTYPEC_XS_FUNC_SUPPORTED_ACCESSORY_MODES_POLLING	usb_typec_tests.sh -t supported_accessory_modes	USB_TYPEC	IO
USBTYPEC_XS_FUNC_SYSFS	usb_typec_tests.sh -t sysfsinfo	USB_TYPEC	IO
USBTYPEC_XS_FUNC_SYSFS_ALL	usb_typec_tests.sh -t all	USB_TYPEC	IO
USBTYPEC_XS_FUNC_TRACE	usb_trace_tests.sh -t ucsi	USB_TYPEC	IO
USBTYPEC_XS_FUNC_VCONN_SOURCE_POLLING	usb_typec_tests.sh -t vconn_source	USB_TYPEC	IO
USB_XS_FUNC_CHK_XHCI_DMESG	xhci_check.sh dmesg	USB_HOST	IO
USB_XS_FUNC_CHK_XHCI_SYSFS	xhci_check.sh sysfs	USB_HOST	IO
USB_XS_FUNC_D3HOT_ENABLE	check_suspend_mode_set.sh	USB_HOST	IO
USB_XS_FUNC_LIST_USB_DEV	listing_usb_devices.sh	USB_HOST	IO
USB_XS_FUNC_SYSFS_CTRL	verify_sysfs_xhci_controllers.sh	USB_HOST	IO
USB_XS_FUNC_SYSFS_NEW_ID	add_rm_device_id.sh -t add_id	USB_HOST	IO
USB_XS_FUNC_SYSFS_RM_ID	add_rm_device_id.sh -t remove_id	USB_HOST	IO
SD_M_FUNC_EXT2_DD_RW_1G	blk_device_dd_readwrite_test.sh -f 'ext2' -b '10M' -c '100' -d 'sd'	SD	IO
SD_M_FUNC_EXT3_DD_RW_1G	blk_device_dd_readwrite_test.sh -f 'ext3' -b '10M' -c '100' -d 'sd'	SD	IO
SD_M_FUNC_EXT4_DD_RW_1G	blk_device_dd_readwrite_test.sh -f 'ext4' -b '10M' -c '100' -d 'sd'	SD	IO
SD_XS_FUNC_64DMA_CHECK	sd_64.sh	SD	IO
SD_XS_FUNC_BIND_UNBIND_DRV	bind_unbind_driver.sh "sdhci"	SD	IO
SD_XS_FUNC_DEV_CHECK	blk_device_bat_test.sh -d "sd" -c "2"	SD	IO
SD_XS_FUNC_DRV_CHECK	blk_device_bat_test.sh -d "sd" -c "1"	SD	IO
SD_XS_FUNC_GET_NAME	blk_device_bat_test.sh -d "sd" -c "3"	SD	IO
SD_XS_FUNC_MOUNT_PART	blk_device_bat_test.sh -d "sd" -c "4"	SD	IO
I2C_XS_BAT_CHAR_DEV_NODE_CHECK	i2c_bat_tests.sh -c check_char_node	I2C	LPSS_IO
I2C_XS_BAT_DRV_CHECK	i2c_basic_tests.sh -c 0	I2C	LPSS_IO
I2C_XS_FUNC_GET_FUNCTIONALITY	i2c_tests.sh -c functionality	I2C	LPSS_IO
I2C_XS_FUNC_I2CBUSDETECT	i2c_tests.sh -c i2c_bus_detect	I2C	LPSS_IO
I2C_XS_FUNC_I2CDETECT	i2c_tests.sh -c i2c_detect -l 1	I2C	LPSS_IO
I2C_XS_FUNC_NEG_INVALID_ADDR	i2c_tests.sh -c neg_invalid_addr	I2C	LPSS_IO
LPC_FUNC_BIND_UNBIND_ATKBD_DRIVER	bind_unbind_driver.sh "atkbd"	LPC	LPSS_IO
LPC_FUNC_BIND_UNBIND_LPC_DRIVER	bind_unbind_driver.sh "lpc_ich"	LPC	LPSS_IO
LPC_FUNC_BIND_UNBIND_PSMOUSE_DRIVER	bind_unbind_driver.sh "psmouse"	LPC	LPSS_IO
LPC_FUNC_CHECK_ATKBD_DRIVER_PRECONDITIONS	driver_sysfs.sh -d "atkbd" -p	LPC	LPSS_IO
LPC_FUNC_CHECK_ATKBD_DRIVER_SYSFS	driver_sysfs.sh -d "atkbd" -s "a"	LPC	LPSS_IO
LPC_FUNC_CHECK_BOUNDS_SYSFS_PS2_CONNECTED	check_lpc_sysfs.sh	LPC	LPSS_IO
LPC_FUNC_CHECK_LPC_DRIVER_PRECONDITIONS	driver_sysfs.sh -d "lpc_ich" -p	LPC	LPSS_IO
LPC_FUNC_CHECK_PSMOUSE_DRIVER_PRECONDITIONS	driver_sysfs.sh -d "psmouse" -p	LPC	LPSS_IO
LPC_FUNC_CHECK_PSMOUSE_DRIVER_SYSFS	driver_sysfs.sh -d "psmouse" -s "a"	LPC	LPSS_IO
LPC_FUNC_LPC_DEVICES_CONNECTED	check_devices.sh	LPC	LPSS_IO
PWM_XS_FUNC_BIND_UNBIND_DRIVER	bind_unbind_driver.sh "pwm"	PWM	LPSS_IO
PWM_XS_FUNC_DRV_CHECK	driver_sysfs.sh -d "pwm" -p	PWM	LPSS_IO
PWM_XS_FUNC_DRV_CHECK_LPSS	driver_sysfs.sh -d "pwm_lpss" -p	PWM	LPSS_IO
PWM_XS_FUNC_DRV_CHECK_LPSS_PALTFORM	driver_sysfs.sh -d "pwm_lpss_platform" -p	PWM	LPSS_IO
PWM_XS_FUNC_DRV_CHECK_LPSS_PCI	driver_sysfs.sh -d "pwm_lpss_pci" -p	PWM	LPSS_IO
PWM_XS_FUNC_DRV_CHECK_REGULATOR	driver_sysfs.sh -d "pwm_regulator" -p	PWM	LPSS_IO
PWM_XS_FUNC_INTEL_BLIGHT_0PER	pwm_backlight.sh -b "intel_backlight" -p 0 -i 1	PWM	LPSS_IO
PWM_XS_FUNC_INTEL_BLIGHT_100PER	pwm_backlight.sh -b "intel_backlight" -p 100 -i 1	PWM	LPSS_IO
PWM_XS_FUNC_INTEL_BLIGHT_25PER	pwm_backlight.sh -b "intel_backlight" -p 25 -i 1	PWM	LPSS_IO
PWM_XS_FUNC_INTEL_BLIGHT_50PER	pwm_backlight.sh -b "intel_backlight" -p 50 -i 1	PWM	LPSS_IO
PWM_XS_FUNC_INTEL_BLIGHT_75PER	pwm_backlight.sh -b "intel_backlight" -p 75 -i 1	PWM	LPSS_IO
PWM_XS_FUNC_LPSS0_D0_I_P50K	pwm.sh -p "all" -d 0 -o "inverted" -e 50000	PWM	LPSS_IO
PWM_XS_FUNC_LPSS0_D0_N_P100K	pwm.sh -p "all" -d 0 -o "normal" -e 100000	PWM	LPSS_IO
PWM_XS_FUNC_LPSS0_D100_I_P50K	pwm.sh -p "all" -d 100 -o "inverted" -e 50000	PWM	LPSS_IO
PWM_XS_FUNC_LPSS0_D100_N_P100K	pwm.sh -p "all" -d 100 -o "normal" -e 100000	PWM	LPSS_IO
PWM_XS_FUNC_LPSS0_D25_I_P100K	pwm.sh -p "all" -d 25 -o "inverted" -e 100000	PWM	LPSS_IO
PWM_XS_FUNC_LPSS0_D25_N_P50K	pwm.sh -p "all" -d 25 -o "normal" -e 50000	PWM	LPSS_IO
PWM_XS_FUNC_LPSS0_D50_I_P100K	pwm.sh -p "all" -d 50 -o "inverted" -e 100000	PWM	LPSS_IO
PWM_XS_FUNC_LPSS0_D50_N_P10	pwm.sh -p "all" -d 50 -o "normal" -e 10	PWM	LPSS_IO
PWM_XS_FUNC_LPSS0_D75_I_P10	pwm.sh -p "all" -d 75 -o "inverted" -e 10	PWM	LPSS_IO
PWM_XS_FUNC_LPSS0_D75_N_P50K	pwm.sh -p "all" -d 75 -o "normal" -e 50000	PWM	LPSS_IO
PWM_XS_FUNC_PWMCHIP_SYSFS	driver_sysfs.sh -d "pwm" -s h	PWM	LPSS_IO
SMBUS_XS_BAT_DEV_CHECK	smbus_function_test.sh -r "DEV_CHECK"	SMBUS	LPSS_IO
SMBUS_XS_BAT_DRV_CHECK	smbus_function_test.sh -r "DRV_CHECK"	SMBUS	LPSS_IO
SMBUS_XS_FUNC_GET_FUNCTIONALITY	smbus_function_test.sh -r "GET_FUNCTIONALITY"	SMBUS	LPSS_IO
SMBUS_XS_FUNC_NEG_INVALID_ADDR_REG_RD	smbus_function_test.sh -r "INVALID_ADDR_REG_RD"	SMBUS	LPSS_IO
SMBUS_XS_FUNC_NEG_INVALID_ADDR_REG_WR	smbus_function_test.sh -r "INVALID_ADDR_REG_WR"	SMBUS	LPSS_IO
SMBUS_XS_FUNC_POS_VALID_ADDR_REG_RD	smbus_function_test.sh -r "VALID_ADDR_REG_RD"	SMBUS	LPSS_IO
SMBUS_XS_FUNC_POS_VALID_ADDR_REG_WR	smbus_function_test.sh -r "VALID_ADDR_REG_WR"	SMBUS	LPSS_IO
SMBUS_XS_FUNC_RUNTIME_PM_AUTO_SUSPENDED	smbus_function_test.sh -r "RT_PM_AUTO_SUSPENDED"	SMBUS	LPSS_IO
SMBUS_XS_FUNC_RUNTIME_PM_SUPPORT_CHECK	smbus_function_test.sh -r "RT_PM_CHECK"	SMBUS	LPSS_IO
SMBUS_XS_FUNC_SLAVE_ADDR_DETECT	smbus_function_test.sh -r "SMBUS_ADDR_DETECT"	SMBUS	LPSS_IO
SMBUS_XS_FUNC_VALID_ADDR_DUMP	smbus_function_test.sh -r "VALID_ADDR_DUMP"	SMBUS	LPSS_IO
SPI-NOR_S_FUNC_BIOS_BACKUP_TEST	spi-nor-test.sh -r BIOS_BACKUP_TEST	SPI-NOR	LPSS_IO
SPI-NOR_S_FUNC_BIOS_WRITABLE_TEST	spi-nor-test.sh -r WRITABLE_TEST	SPI-NOR	LPSS_IO
SPI-NOR_S_FUNC_BIOS_WRITE_PROTECTION	spi-nor-test.sh -r WRITE_PROTECTION	SPI-NOR	LPSS_IO
SPI-NOR_XS_BAT_BIND_UNBIND_DRV	bind_unbind_driver.sh "spi_nor"	SPI-NOR	LPSS_IO
SPI-NOR_XS_BAT_BIOS_DEV_CHECK	spi_dev_info_check.sh -d "spi_nor" -m	SPI-NOR	LPSS_IO
SPI-NOR_XS_BAT_DEV_CHECK	driver_sysfs.sh -d "spi_nor" -s "h"	SPI-NOR	LPSS_IO
SPI-NOR_XS_BAT_DEV_ID_CHECK	spi_dev_info_check.sh -d "spi_nor" -p	SPI-NOR	LPSS_IO
SPI-NOR_XS_BAT_DRV_CHECK	driver_sysfs.sh -d "spi_nor" -p	SPI-NOR	LPSS_IO
SPI_XS_BAT_BIND_UNBIND_DRV	bind_unbind_driver.sh "spi"	SPI	LPSS_IO
SPI_XS_BAT_DEV_CHECK	driver_sysfs.sh -d "spi" -s "h"	SPI	LPSS_IO
SPI_XS_BAT_DEV_ID_CHECK	spi_dev_info_check.sh -d "spi" -p	SPI	LPSS_IO
SPI_XS_BAT_DRV_CHECK	driver_sysfs.sh -d "spi" -p	SPI	LPSS_IO
UART_XS_BAT_8250_DW_MODULE_CHECK	uart_bat_tests.sh -c 3	UART	LPSS_IO
UART_XS_BAT_8250_INITCALL_CHECK	uart_bat_tests.sh -c 0	UART	LPSS_IO
UART_XS_BAT_DRIVER_BIND_UNBIND_CHECK	uart_bat_tests.sh -c 4	UART	LPSS_IO
UART_XS_BAT_SERIAL_PCI_INITCALL_CHECK	uart_bat_tests.sh -c 1	UART	LPSS_IO
UART_XS_BAT_SYSFS_NODE_CHECK	uart_bat_tests.sh -c 2	UART	LPSS_IO
UART_XS_FUNC_8BS_NOP_SB1_NOFC_TRANS_115200	uart_transmit_tests.sh -b 115200	UART	LPSS_IO
UART_XS_FUNC_8BS_NOP_SB1_NOFC_TRANS_1200	uart_transmit_tests.sh -b 1200	UART	LPSS_IO
UART_XS_FUNC_8BS_NOP_SB1_NOFC_TRANS_14400	uart_transmit_tests.sh -b 14400	UART	LPSS_IO
UART_XS_FUNC_8BS_NOP_SB1_NOFC_TRANS_19200	uart_transmit_tests.sh -b 19200	UART	LPSS_IO
UART_XS_FUNC_8BS_NOP_SB1_NOFC_TRANS_2400	uart_transmit_tests.sh -b 2400	UART	LPSS_IO
UART_XS_FUNC_8BS_NOP_SB1_NOFC_TRANS_300	uart_transmit_tests.sh -b 300	UART	LPSS_IO
UART_XS_FUNC_8BS_NOP_SB1_NOFC_TRANS_38400	uart_transmit_tests.sh -b 38400	UART	LPSS_IO
UART_XS_FUNC_8BS_NOP_SB1_NOFC_TRANS_4800	uart_transmit_tests.sh -b 4800	UART	LPSS_IO
UART_XS_FUNC_8BS_NOP_SB1_NOFC_TRANS_57600	uart_transmit_tests.sh -b 57600	UART	LPSS_IO
UART_XS_FUNC_8BS_NOP_SB1_NOFC_TRANS_600	uart_transmit_tests.sh -b 600	UART	LPSS_IO
UART_XS_FUNC_8BS_NOP_SB1_NOFC_TRANS_9600	uart_transmit_tests.sh -b 9600	UART	LPSS_IO
UART_XS_FUNC_SET_BAUDRATE	uart_set_baudrate.sh	UART	LPSS_IO
POWER_S_FUNC_POWERCLAMP_LONG_LASTING_TEST	powerclamp_idle_inject_tests.sh -l 180	Intel_Powerclamp	Power
POWER_S_FUNC_POWERCLAMP_RANDOM_CPU_ON_OFF	powerclamp_idle_inject_tests.sh -s 180	Intel_Powerclamp	Power
POWER_S_FUNC_POWERCLAMP_RANDOM_IDLE_INJECT_ON_OFF	powerclamp_idle_inject_tests.sh -r 180	Intel_Powerclamp	Power
POWER_XS_FUNC_CHK_ALL_INTELPSTATE	powermgr_interface_check.sh -c 5	Intel_Pstate	Power
POWER_XS_FUNC_CHK_ALL_S4_MODES	powermgr_interface_check.sh -c 6	Power_State	Power
POWER_XS_FUNC_CHK_CPUFREQ_DRV	powermgr_interface_check.sh -c 4	Intel_Pstate	Power
POWER_XS_FUNC_CHK_CPUFREQ_GOV	powermgr_interface_check.sh -c 10	Intel_Pstate	Power
POWER_XS_FUNC_CHK_CPUFREQ_SYSFS	powermgr_interface_check.sh -c 9	Intel_Pstate	Power
POWER_XS_FUNC_CHK_IDLE_DRV	powermgr_interface_check.sh -c 3	Intel_Idle	Power
POWER_XS_FUNC_CHK_INTELIDLE_SYSFS	powermgr_interface_check.sh -c 1	Intel_Idle	Power
POWER_XS_FUNC_CHK_INTELPSTATE_SYSFS	powermgr_interface_check.sh -c 2	Intel_Pstate	Power
POWER_XS_FUNC_CHK_KCFG_CPUFREQ	powermgr_kconfig_check.sh -o y -c "$CPUFREQ_KCONFIG"	Intel_Pstate	Power
POWER_XS_FUNC_CHK_KCFG_CPUIDLE	powermgr_kconfig_check.sh -o y -c "$CPUIDLE_KCONFIG"	Intel_Idle	Power
POWER_XS_FUNC_CHK_KCFG_INTELIDLE	powermgr_kconfig_check.sh -o y -c "$INTELIDLE_KCONFIG"	Intel_Idle	Power
POWER_XS_FUNC_CHK_KCFG_POWERCLAMP	source "common.sh"; test_kconfigs "m" "CONFIG_INTEL_POWERCLAMP"	Intel_Powerclamp	Power
POWER_XS_FUNC_CHK_S4_SWAPSIZE	powermgr_interface_check.sh -c 8	Power_State	Power
POWER_XS_FUNC_CPUFREQ_INITCALL	powermgr_dmesg_check.sh -t debug -p "$CPUFREQ_PATTERN"	Intel_Pstate	Power
POWER_XS_FUNC_CPUFREQ_INITTIME	powermgr_dmesg_check.sh -t time -p "$CPUFREQ_PATTERN"	Intel_Pstate	Power
POWER_XS_FUNC_CPU_HOTPLUG	powermgr_pstate_tests.sh -c 8	Intel_Pstate	Power
POWER_XS_FUNC_CSTATE_SWITCH	powermgr_cstate_tests.sh -c 1 -t 30	Intel_Idle	Power
POWER_XS_FUNC_DEFAULT_GOV_EPP	powermgr_pstate_tests.sh -c 10	Intel_Pstate	Power
POWER_XS_FUNC_GOV_PERF_EPP_BALANCE_PERF	powermgr_pstate_tests.sh -c 12	Intel_Pstate	Power
POWER_XS_FUNC_GOV_PERF_EPP_BALANCE_POWER	powermgr_pstate_tests.sh -c 13	Intel_Pstate	Power
POWER_XS_FUNC_GOV_PERF_EPP_PERF	powermgr_pstate_tests.sh -c 11	Intel_Pstate	Power
POWER_XS_FUNC_GOV_PERF_EPP_POWER	powermgr_pstate_tests.sh -c 14	Intel_Pstate	Power
POWER_XS_FUNC_GOV_POWERSAVE_EPP_BALANCE_PERF	powermgr_pstate_tests.sh -c 16	Intel_Pstate	Power
POWER_XS_FUNC_GOV_POWERSAVE_EPP_BALANCE_POWER	powermgr_pstate_tests.sh -c 17	Intel_Pstate	Power
POWER_XS_FUNC_GOV_POWERSAVE_EPP_PERF	powermgr_pstate_tests.sh -c 15	Intel_Pstate	Power
POWER_XS_FUNC_GOV_POWERSAVE_EPP_POWER	powermgr_pstate_tests.sh -c 18	Intel_Pstate	Power
POWER_XS_FUNC_HWP_CPU_HOTPLUG	powermgr_pstate_tests.sh -c 19	Intel_Pstate	Power
POWER_XS_FUNC_HWP_S2IDLE	powermgr_pstate_tests.sh -c 9	Intel_Pstate	Power
POWER_XS_FUNC_HWP_S3	powermgr_pstate_tests.sh -c 1	Intel_Pstate	Power
POWER_XS_FUNC_INTELIDLE_INITCALL	powermgr_dmesg_check.sh -t debug -p "$INTELIDLE_PATTERN"	Intel_Idle	Power
POWER_XS_FUNC_INTELIDLE_INITTIME	powermgr_dmesg_check.sh -t time -p "$INTELIDLE_PATTERN"	Intel_Idle	Power
POWER_XS_FUNC_INTELPSTATE_GOVERNOR_PERF	powermgr_pstate_tests.sh -c 4	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_GOVERNOR_PWRSAVE	powermgr_pstate_tests.sh -c 5	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_INITCALL	powermgr_dmesg_check.sh -t debug -p "$INTEL_PSTATE_PATTERN"	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_INITTIME	powermgr_dmesg_check.sh -t time -p "$INTEL_PSTATE_PATTERN"	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_MAXPERFPCT_50	powermgr_pstate_tests.sh -c 6	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_MAX_CPUFREQ	powermgr_pstate_tests.sh -c 2	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_MAX_CPUFREQ_PERF	powermgr_pstate_freq_tests.sh -t no -m performance -c all	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_MAX_CPUFREQ_PERF_TURBO	powermgr_pstate_freq_tests.sh -t yes -m performance -c all	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_MAX_CPUFREQ_POWERSAVE	powermgr_pstate_freq_tests.sh -t no -m powersave -c all	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_MAX_CPUFREQ_POWERSAVE_TURBO	powermgr_pstate_freq_tests.sh -t yes -m powersave -c all	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_MINPERFPCT_50	powermgr_pstate_tests.sh -c 7	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_NO_HWP_PERF_NO_TURBO	powermgr_pstate_freq_step_tests.sh -t no -m performance -c one	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_NO_HWP_PERF_TURBO	powermgr_pstate_freq_step_tests.sh -t yes -m performance -c one	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_NO_HWP_POWERSAVE_NO_TURBO	powermgr_pstate_freq_step_tests.sh -t no -m powersave -c one	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_NO_HWP_POWERSAVE_TURBO	powermgr_pstate_freq_step_tests.sh -t yes -m powersave -c one	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_PER_CPU_PERF_NO_TURBO	powermgr_pstate_freq_step_tests.sh -t no -m performance -c all	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_PER_CPU_PERF_TURBO	powermgr_pstate_freq_step_tests.sh -t yes -m performance -c all	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_PER_CPU_POWERSAVE_NO_TURBO	powermgr_pstate_freq_step_tests.sh -t no -m powersave -c all	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_PER_CPU_POWERSAVE_TURBO	powermgr_pstate_freq_step_tests.sh -t yes -m powersave -c all	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_SINGLE_CPUFREQ_PERF	powermgr_pstate_freq_tests.sh -t no -m performance -c one	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_SINGLE_CPUFREQ_PERF_TURBO	powermgr_pstate_freq_tests.sh -t yes -m performance -c one	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_SINGLE_CPUFREQ_POWERSAVE	powermgr_pstate_freq_tests.sh -t no -m powersave -c one	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_SINGLE_CPUFREQ_POWERSAVE_TURBO	powermgr_pstate_freq_tests.sh -t yes -m powersave -c one	Intel_Pstate	Power
POWER_XS_FUNC_INTELPSTATE_SINGLE_CPU_FREQ	powermgr_pstate_tests.sh -c 20	Intel_Pstate	Power
POWER_XS_FUNC_LOAD_UNLOAD_POWERCLAMP	source "common.sh"; powerclamp_module_tests.sh -l	Intel_Powerclamp	Power
POWER_XS_FUNC_OPERATION_MODE_ACTIVE	powermgr_pstate_tests.sh -c 23	Intel_Pstate	Power
POWER_XS_FUNC_OPERATION_MODE_OFF	powermgr_pstate_tests.sh -c 21	Intel_Pstate	Power
POWER_XS_FUNC_OPERATION_MODE_PASSIVE	powermgr_pstate_tests.sh -c 22	Intel_Pstate	Power
POWER_XS_FUNC_POWERCLAMP_CHECK_KIDLE_INJECT	powerclamp_idle_inject_tests.sh -c	Intel_Powerclamp	Power
POWER_XS_FUNC_POWERCLAMP_CHECK_PERF_POWER_CONTROL	powerclamp_idle_inject_tests.sh -p	Intel_Powerclamp	Power
POWER_XS_FUNC_POWERCLAMP_CHK_IDLE_INJECT_DMESG	source "common.sh"; powerclamp_module_tests.sh -d	Intel_Powerclamp	Power
POWER_XS_FUNC_POWERCLAMP_CPU_ONLINE_OFFLINE	powerclamp_idle_inject_tests.sh -o	Intel_Powerclamp	Power
POWER_XS_FUNC_POWERCLAMP_FORCED_MODULE_UNLOAD	powerclamp_idle_inject_tests.sh -f	Intel_Powerclamp	Power
POWER_XS_FUNC_POWERCLAMP_INCREMENTAL_IDLE_INJECT	powerclamp_idle_inject_tests.sh -i 10	Intel_Powerclamp	Power
POWER_XS_FUNC_READ_POWERCLAMP_SYSFS	source "common.sh"; powerclamp_module_tests.sh -r	Intel_Powerclamp	Power
POWER_XS_FUNC_TIMING_FREEZE	powermgr_suspend_timing_tests.sh -s freeze	Timing	Power
POWER_XS_FUNC_TIMING_S3	powermgr_suspend_timing_tests.sh -s mem	Timing	Power
POWER_XS_FUNC_TURBO_NOTURBO	powermgr_pstate_tests.sh -c 3	Intel_Pstate	Power
POWER_XS_FUNC_WRITE_POWERCLAMP_SYSFS	source "common.sh"; powerclamp_module_tests.sh -w 50	Intel_Powerclamp	Power
POWER_XS_FUNC_WRITE_POWERCLAMP_SYSFS_NEG	source "common.sh"; powerclamp_module_tests.sh -n -w "abc"	Intel_Powerclamp	Power
RAPL_XS_FUNC_CHK_DRAM_DOMAIN	rapl_bat_tests.sh -d	Intel_RAPL	Power
RAPL_XS_FUNC_CHK_INTERFACE	rapl_bat_tests.sh -i	Intel_RAPL	Power
RAPL_XS_FUNC_CHK_KCFG_POWERCAP	source "common.sh"; test_kconfigs "y" "CONFIG_POWERCAP"	Intel_RAPL	Power
RAPL_XS_FUNC_CHK_KCFG_RAPL	source "common.sh"; test_kconfigs "y" "CONFIG_INTEL_RAPL" || test_kconfigs "m" "CONFIG_INTEL_RAPL"	Intel_RAPL	Power
RAPL_XS_FUNC_CHK_PKG_DOMAIN	rapl_bat_tests.sh -p	Intel_RAPL	Power
RAPL_XS_FUNC_CHK_PP0_DOMAIN	rapl_bat_tests.sh -c	Intel_RAPL	Power
RAPL_XS_FUNC_CHK_PP1_DOMAIN	rapl_bat_tests.sh -g	Intel_RAPL	Power
RAPL_XS_FUNC_LOAD_UNLOAD_MODULE	rapl_bat_tests.sh -l 10	Intel_RAPL	Power
RAPL_XS_FUNC_READ_DRAM_ENERGY_STATUS	rapl_power_check.sh -e dram	Intel_RAPL	Power
RAPL_XS_FUNC_READ_DRAM_ENERGY_WITH_WORKLOAD	rapl_power_check.sh -p dram	Intel_RAPL	Power
RAPL_XS_FUNC_READ_PKG_ENERGY_STATUS	rapl_power_check.sh -e pkg	Intel_RAPL	Power
RAPL_XS_FUNC_READ_PKG_ENERGY_WITH_WORKLOAD	rapl_power_check.sh -p pkg	Intel_RAPL	Power
RAPL_XS_FUNC_READ_PP0_ENERGY_STATUS	rapl_power_check.sh -e core	Intel_RAPL	Power
RAPL_XS_FUNC_READ_PP0_ENERGY_WITH_WORKLOAD	rapl_power_check.sh -p core	Intel_RAPL	Power
RAPL_XS_FUNC_READ_PP1_ENERGY_STATUS	rapl_power_check.sh -e uncore	Intel_RAPL	Power
RAPL_XS_FUNC_READ_PP1_ENERGY_WITH_WORKLOAD	rapl_power_check.sh -p uncore	Intel_RAPL	Power
THERMAL_XS_FUNC_COOLING	thermal_02.sh	Thermal	Power
THERMAL_XS_FUNC_CORETEMP_ENTRY	thermal_10.sh	Thermal	Power
THERMAL_XS_FUNC_HWMON_SYSFS	thermal_08.sh	Thermal	Power
THERMAL_XS_FUNC_NEG_CDEV_MSTATE	thermal_13.sh	Thermal	Power
THERMAL_XS_FUNC_PCLAMP_REG	thermal_09.sh	Thermal	Power
THERMAL_XS_FUNC_PER_CORE_TEMP	thermal_11.sh -c -t 300	Thermal	Power
THERMAL_XS_FUNC_RAPL_SYSFS	thermal_12.sh	Thermal	Power
THERMAL_XS_FUNC_SANITY	thermal_01.sh	Thermal	Power
THERMAL_XS_FUNC_SENSING	thermal_03.sh	Thermal	Power
THERMAL_XS_FUNC_THROTTLING	thermal_throttling.sh	Thermal	Power
THERMAL_XS_FUNC_TZONE_SYSFS	thermal_07.sh	Thermal	Power
CPU_XS_BAT_CET_IBT_CPU_ID_TEST	cpu_bat.sh -n cet -p "7 0 0 0 d 20"	CET	Security
CPU_XS_BAT_CET_IBT_CPU_INFO_TEST	cpu_bat.sh -n cet -f ibt	CET	Security
CPU_XS_BAT_CET_SHSTK_CPU_ID_TEST	cpu_bat.sh -n cet -p "7 0 0 0 c 7"	CET	Security
CPU_XS_BAT_CET_SHSTK_CPU_INFO_TEST	cpu_bat.sh -n cet -f shstk	CET	Security
CPU_XS_BAT_UMIP_CPU_ID_TEST	cpu_bat.sh -n umip -p "7 1 0 1 c 2"	UMIP	Security
CPU_XS_BAT_UMIP_CPU_INFO_TEST	cpu_bat.sh -n umip -f umip	UMIP	Security
CPU_XS_BAT_UMIP_KCONFIG_UMIP_TEST	cpu_bat.sh -k "CONFIG_X86_INTEL_UMIP=y"	UMIP	Security
CPU_XS_FUNC_UMIP_BASIC_32_SGDT	umip_func.sh -n umip_test_basic_32 -p g	UMIP	Security
CPU_XS_FUNC_UMIP_BASIC_32_SIDT	umip_func.sh -n umip_test_basic_32 -p i	UMIP	Security
CPU_XS_FUNC_UMIP_BASIC_32_SLDT	umip_func.sh -n umip_test_basic_32 -p l	UMIP	Security
CPU_XS_FUNC_UMIP_BASIC_32_SMSW	umip_func.sh -n umip_test_basic_32 -p m	UMIP	Security
CPU_XS_FUNC_UMIP_BASIC_32_STR	umip_func.sh -n umip_test_basic_32 -p t	UMIP	Security
CPU_XS_FUNC_UMIP_BASIC_64_SGDT	umip_func.sh -n umip_test_basic_64 -p g	UMIP	Security
CPU_XS_FUNC_UMIP_BASIC_64_SIDT	umip_func.sh -n umip_test_basic_64 -p i	UMIP	Security
CPU_XS_FUNC_UMIP_BASIC_64_SLDT	umip_func.sh -n umip_test_basic_64 -p l	UMIP	Security
CPU_XS_FUNC_UMIP_BASIC_64_SMSW	umip_func.sh -n umip_test_basic_64 -p m	UMIP	Security
CPU_XS_FUNC_UMIP_BASIC_64_STR	umip_func.sh -n umip_test_basic_64 -p t	UMIP	Security
CPU_XS_FUNC_UMIP_DMESG_SGDT	umip_func.sh -n umip_gp_test -p g -c sgdt	UMIP	Security
CPU_XS_FUNC_UMIP_DMESG_SIDT	umip_func.sh -n umip_gp_test -p i -c sidt	UMIP	Security
CPU_XS_FUNC_UMIP_DMESG_SLDT	umip_func.sh -n umip_gp_test -p l -c sldt	UMIP	Security
CPU_XS_FUNC_UMIP_DMESG_SMSW	umip_func.sh -n umip_gp_test -p m -c smsw	UMIP	Security
CPU_XS_FUNC_UMIP_DMESG_STR	umip_func.sh -n umip_gp_test -p t -c str	UMIP	Security
CPU_XS_FUNC_UMIP_EXCP_32_LOCK_PREFIX	umip_func.sh -n umip_exceptions_32 -p l	UMIP	Security
CPU_XS_FUNC_UMIP_EXCP_32_MAPERR	umip_func.sh -n umip_exceptions_32 -p m	UMIP	Security
CPU_XS_FUNC_UMIP_EXCP_32_OUTSIDE_ADDR	umip_func.sh -n umip_exceptions_32 -p d	UMIP	Security
CPU_XS_FUNC_UMIP_EXCP_32_REGISTER_OPERAND	umip_func.sh -n umip_exceptions_32 -p r	UMIP	Security
CPU_XS_FUNC_UMIP_EXCP_32_SELECT_NULL	umip_func.sh -n umip_exceptions_32 -p n	UMIP	Security
CPU_XS_FUNC_UMIP_EXCP_64_LOCK_PREFIX	umip_func.sh -n umip_exceptions_64 -p l	UMIP	Security
CPU_XS_FUNC_UMIP_EXCP_64_MAPERR	umip_func.sh -n umip_exceptions_64 -p m	UMIP	Security
CPU_XS_FUNC_UMIP_EXCP_64_REGISTER_OPERAND	umip_func.sh -n umip_exceptions_64 -p r	UMIP	Security
CPU_XS_FUNC_UMIP_LDT_16_TEST	umip_func.sh -n umip_ldt_16 -p null	UMIP	Security
CPU_XS_FUNC_UMIP_LDT_32_TEST	umip_func.sh -n umip_ldt_32 -p null	UMIP	Security
CPU_XS_FUNC_UMIP_LDT_64_TEST	umip_func.sh -n umip_ldt_64 -p null	UMIP	Security
CPU_XS_FUNC_UMIP_OPNDS_32_SLDT	umip_func.sh -n umip_test_opnds_32 -p l	UMIP	Security
CPU_XS_FUNC_UMIP_OPNDS_32_SMSW	umip_func.sh -n umip_test_opnds_32 -p m	UMIP	Security
CPU_XS_FUNC_UMIP_OPNDS_32_STR	umip_func.sh -n umip_test_opnds_32 -p t	UMIP	Security
CPU_XS_FUNC_UMIP_OPNDS_64_SLDT	umip_func.sh -n umip_test_opnds_64 -p l	UMIP	Security
CPU_XS_FUNC_UMIP_OPNDS_64_SMSW	umip_func.sh -n umip_test_opnds_64 -p m	UMIP	Security
CPU_XS_FUNC_UMIP_OPNDS_64_STR	umip_func.sh -n umip_test_opnds_64 -p t	UMIP	Security
TPM_XS_FUNC_AUTH	tpm_func.sh -p "ecmd" -c "python2 -m unittest -v tpm2_smoke.SmokeTest.test_seal_with_auth" -f "fail"	TPM	Security
TPM_XS_FUNC_LONG_AUTH	tpm_func.sh -p "ecmd" -c "python2 -m unittest -v tpm2_smoke.SmokeTest.test_seal_with_too_long_auth" -f "fail"	TPM	Security
TPM_XS_FUNC_SHORT_CMD	tpm_func.sh -p "ecmd" -c "python2 -m unittest -v tpm2_smoke.SmokeTest.test_too_short_cmd" -f "fail"	TPM	Security
TPM_XS_FUNC_WRONG_AUTH	tpm_func.sh -p "ecmd" -c "python2 -m unittest -v tpm2_smoke.SmokeTest.test_unseal_with_wrong_auth" -f "fail"	TPM	Security
TPM_XS_BAT_CONFIG_PCIE_TPM	tpm_bat.sh -k "CONFIG_IWLWIFI_PCIE_RTPM=y"	TPM	Security
TPM_XS_BAT_CONFIG_RANDOM_TPM	tpm_bat.sh -k "CONFIG_HW_RANDOM_TPM=y"	TPM	Security
TPM_XS_BAT_CONFIG_TCG_TPM	tpm_bat.sh -k "CONFIG_TCG_TPM=y"	TPM	Security
